name: Build on Linux

on:
  push:
    branches: [ "main" ]
    paths:
      - '.github/workflows/**.yml'
      - 'cmake/**'
      - 'external/**'
      - 'src/**'
      - 'CMakeLists.txt'
      - 'CMakePresets.json'
      - 'trigger-build.txt'
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/workflows/**.yml'
      - 'cmake/**'
      - 'external/**'
      - 'src/**'
      - 'CMakeLists.txt'
      - 'CMakePresets.json'
      - 'trigger-build.txt'

env:
  CMAKE_DEBUG_PRESET_NAME: Debug
  CMAKE_DEBUG_CONFIG_NAME: Debug
  CMAKE_DEBUG_OUTPUT_PATTERN: build/Debug/*.so
  CMAKE_RELEASE_PRESET_NAME: Release
  CMAKE_RELEASE_CONFIG_NAME: Release
  CMAKE_RELEASE_OUTPUT_PATTERN: build/Release/*.so
  CMAKE_CC: clang
  CMAKE_CXX: clang++

jobs:
  build:
    runs-on: ubuntu-latest
    container: registry.gitlab.steamos.cloud/steamrt/sniper/sdk

    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build

    - name: Set up environment variables
      run: |
        echo "ABSOLUTE_PATH=$(pwd)" >> $GITHUB_ENV
        echo "REPOSITORY_NAME=$(basename ${GITHUB_REPOSITORY})" >> $GITHUB_ENV

    - name: Configure Git to treat current directory as safe
      run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

    - name: Get latest tag
      id: get-latest-tag
      run: |
        if [ -z "$(git tag)" ]; then
          echo "No tags found"
          echo "LATEST_TAG=none" >> $GITHUB_ENV
        else
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
        fi

    - name: Debug - Configure CMake (Clang)
      run: >
        cmake --preset ${{ env.CMAKE_DEBUG_PRESET_NAME }}
        -DCMAKE_C_COMPILER=${{ env.CMAKE_CC }}
        -DCMAKE_CXX_COMPILER=${{ env.CMAKE_CXX }}

    - name: Debug - Build
      run: cmake --build --preset ${{ env.CMAKE_DEBUG_PRESET_NAME }} --parallel --config ${{ env.CMAKE_DEBUG_CONFIG_NAME }}

    - name: Debug - Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.REPOSITORY_NAME }}-${{ env.LATEST_TAG }}-${{ runner.os }}_${{ env.CMAKE_DEBUG_PRESET_NAME }}
        path: |
          ${{ env.CMAKE_DEBUG_OUTPUT_PATTERN }}

    - name: Release - Configure CMake (Clang)
      run: >
        cmake --preset ${{ env.CMAKE_RELEASE_PRESET_NAME }}
        -DCMAKE_C_COMPILER=${{ env.CMAKE_CC }}
        -DCMAKE_CXX_COMPILER=${{ env.CMAKE_CXX }}

    - name: Release - Build
      run: cmake --build --preset ${{ env.CMAKE_RELEASE_PRESET_NAME }} --parallel --config ${{ env.CMAKE_RELEASE_CONFIG_NAME }}

    - name: Release - Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.REPOSITORY_NAME }}-${{ env.LATEST_TAG }}-${{ runner.os }}_${{ env.CMAKE_RELEASE_PRESET_NAME }}
        path: |
          ${{ env.CMAKE_RELEASE_OUTPUT_PATTERN }}
